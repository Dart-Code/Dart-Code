{
	"name": "dart-code",
	"displayName": "Dart Code",
	"description": "Dart and Flutter support for Visual Studio Code.",
	"version": "1.5.0-flutter",
	"publisher": "DanTup",
	"engines": {
		"vscode": "^1.13.0"
	},
	"license": "SEE LICENSE IN LICENSE",
	"bugs": {
		"url": "https://github.com/Dart-Code/Dart-Code/issues"
	},
	"homepage": "https://github.com/Dart-Code/Dart-Code/blob/master/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/Dart-Code/Dart-Code.git"
	},
	"categories": [
		"Languages",
		"Snippets",
		"Linters",
		"Formatters",
		"Debuggers"
	],
	"keywords": [
		"dart",
		"dartlang",
		"pub",
		"pubspec",
		"flutter"
	],
	"icon": "media/icon.png",
	"activationEvents": [
		"onLanguage:dart",
		"workspaceContains:**/pubspec.yaml"
	],
	"main": "./out/src/extension",
	"contributes": {
		"languages": [
			{
				"id": "dart",
				"extensions": [
					".dart"
				],
				"aliases": [
					"Dart"
				],
				"configuration": "./syntaxes/dart-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "dart",
				"scopeName": "source.dart",
				"path": "./syntaxes/dart.json"
			}
		],
		"snippets": [
			{
				"language": "dart",
				"path": "./snippets/dart.json"
			}
		],
		"commands": [
			{
				"command": "pub.get",
				"title": "Pub Get",
				"category": "Dart",
				"icon": {
					"light": "./media/commands/pull.svg",
					"dark": "./media/commands/pull-inverse.svg"
				}
			},
			{
				"command": "pub.upgrade",
				"title": "Pub Upgrade",
				"category": "Dart",
				"icon": {
					"light": "./media/commands/pull.svg",
					"dark": "./media/commands/pull-inverse.svg"
				}
			},
			{
				"command": "dart.organizeDirectives",
				"title": "Organize Directives",
				"category": "Dart"
			},
			{
				"command": "dart.showTypeHierarchy",
				"title": "Show Type Hierarchy",
				"category": "Dart"
			},
			{
				"command": "flutter.packages.get",
				"title": "Get Flutter Packages",
				"category": "Flutter",
				"icon": {
					"light": "./media/commands/pull.svg",
					"dark": "./media/commands/pull-inverse.svg"
				}
			},
			{
				"command": "flutter.packages.upgrade",
				"title": "Upgrade Flutter Packages",
				"category": "Flutter",
				"icon": {
					"light": "./media/commands/pull.svg",
					"dark": "./media/commands/pull-inverse.svg"
				}
			}
		],
		"keybindings": [
			{
				"command": "dart.organizeDirectives",
				"key": "ctrl+alt+o",
				"mac": "cmd+alt+o",
				"when": "editorLangId == dart"
			},
			{
				"command": "dart.showTypeHierarchy",
				"key": "f4",
				"mac": "f4",
				"when": "editorLangId == dart"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "pub.get",
					"when": "dart-code:dartProjectLoaded"
				},
				{
					"command": "pub.upgrade",
					"when": "dart-code:dartProjectLoaded"
				},
				{
					"command": "dart.organizeDirectives",
					"when": "dart-code:dartProjectLoaded && editorLangId == dart"
				},
				{
					"command": "dart.showTypeHierarchy",
					"when": "dart-code:dartProjectLoaded && editorLangId == dart"
				},
				{
					"command": "flutter.packages.get",
					"when": "dart-code:flutterProjectLoaded"
				},
				{
					"command": "flutter.packages.upgrade",
					"when": "dart-code:flutterProjectLoaded"
				}
			],
			"editor/title": [
				{
					"when": "resourceFilename == pubspec.yaml && dart-code:dartProjectLoaded && !dart-code:flutterProjectLoaded",
					"command": "pub.get",
					"alt": "pub.upgrade",
					"group": "navigation"
				},
				{
					"when": "resourceFilename == pubspec.yaml && dart-code:flutterProjectLoaded",
					"command": "flutter.packages.get",
					"alt": "flutter.packages.upgrade",
					"group": "navigation"
				}
			],
			"editor/context": [
				{
					"when": "resourceFilename == pubspec.yaml && dart-code:dartProjectLoaded && !dart-code:flutterProjectLoaded",
					"command": "pub.get"
				},
				{
					"when": "resourceFilename == pubspec.yaml && dart-code:dartProjectLoaded && !dart-code:flutterProjectLoaded",
					"command": "pub.upgrade"
				},
				{
					"when": "resourceFilename == pubspec.yaml && dart-code:flutterProjectLoaded",
					"command": "flutter.packages.get"
				},
				{
					"when": "resourceFilename == pubspec.yaml && dart-code:flutterProjectLoaded",
					"command": "flutter.packages.upgrade"
				}
			],
			"explorer/context": [
				{
					"when": "resourceFilename == pubspec.yaml && dart-code:dartProjectLoaded && !dart-code:flutterProjectLoaded",
					"command": "pub.get"
				},
				{
					"when": "resourceFilename == pubspec.yaml && dart-code:dartProjectLoaded && !dart-code:flutterProjectLoaded",
					"command": "pub.upgrade"
				},
				{
					"when": "resourceFilename == pubspec.yaml && dart-code:flutterProjectLoaded",
					"command": "flutter.packages.get"
				},
				{
					"when": "resourceFilename == pubspec.yaml && dart-code:flutterProjectLoaded",
					"command": "flutter.packages.upgrade"
				}
			]
		},
		"configurationDefaults": {
			"[dart]": {
				"editor.tabSize": 2,
				"editor.insertSpaces": true
			}
		},
		"configuration": {
			"type": "object",
			"title": "Dart Configuration",
			"properties": {
				"dart.debugSdkLibraries": {
					"type": "boolean",
					"default": false,
					"description": "Whether SDK libraries should be marked as debuggable."
				},
				"dart.debugExternalLibraries": {
					"type": "boolean",
					"default": false,
					"description": "Whether external libraries should be marked as debuggable."
				},
				"dart.sdkPath": {
					"type": "string",
					"description": "The location of the Dart SDK to use for analyzing and executing code. If blank, Dart Code will attempt to find it from the PATH environment variable."
				},
				"dart.lineLength": {
					"type": "integer",
					"default": 80,
					"description": "The maximum length of a line of code. This is used by the document formatter."
				},
				"dart.insertArgumentPlaceholders": {
					"type": "boolean",
					"default": true,
					"description": "Whether to insert argument placeholders during code completions."
				},
				"dart.showTodos": {
					"type": "boolean",
					"default": true,
					"description": "Whether to show TODOs in the Problems list."
				},
				"dart.reportAnalyzerErrors": {
					"type": "boolean",
					"default": true,
					"description": "Offer to report analysis server exceptions when they occur."
				},
				"dart.allowAnalytics": {
					"type": "boolean",
					"default": true,
					"description": "Note: We only send a few very basic events and the platform and extension/Dart version numbers :-)"
				},
				"dart.checkForSdkUpdates": {
					"type": "boolean",
					"default": true,
					"description": "Checks whether you are using the latest version of the Dart SDK at startup."
				},
				"dart.pubAdditionalArgs": {
					"type": "array",
					"default": [],
					"description": "Additional args to pass to pub get and pub upgrade commands (eg. --packages-dir)."
				},
				"dart.runPubGetOnPubspecChanges": {
					"type": "boolean",
					"default": true,
					"description": "Automatically runs `pub get` whenever pubspec.yaml is saved."
				}
			}
		},
		"debuggers": [
			{
				"type": "dart-cli",
				"label": "Dart command line",
				"enableBreakpointsFor": {
					"languageIds": [
						"dart"
					]
				},
				"program": "./out/src/debug/dart_debug_entry.js",
				"runtime": "node",
				"startSessionCommand": "dart.startDebugSession",
				"configurationAttributes": {
					"launch": {
						"required": [
							"program"
						],
						"properties": {
							"cwd": {
								"type": "string",
								"description": "Workspace root."
							},
							"checkedMode": {
								"type": "boolean",
								"description": "Whether to run the VM in checked mode.",
								"default": true
							},
							"program": {
								"type": "string",
								"description": "Path to a Dart file.",
								"default": "${workspaceRoot}/bin/main.dart"
							},
							"args": {
								"type": "array",
								"description": "Command line arguments to the application.",
								"items": {
									"type": "string"
								}
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"name": "Dart command line",
						"type": "dart-cli",
						"request": "launch",
						"program": "${workspaceRoot}/bin/main.dart"
					}
				],
				"configurationSnippets": [
					{
						"label": "Dart command line",
						"description": "Launch and debug Dart command line applications",
						"body": {
							"name": "Dart command line",
							"type": "dart-cli",
							"request": "launch",
							"program": "^\"\\${workspaceRoot}/bin/main.dart\""
						}
					}
				]
			},
			{
				"type": "flutter",
				"label": "Flutter mobile app",
				"enableBreakpointsFor": {
					"languageIds": [
						"dart"
					]
				},
				"program": "./out/src/debug/flutter_debug_entry.js",
				"runtime": "node",
				"startSessionCommand": "dart.startDebugSession",
				"configurationAttributes": {
					"launch": {
						"properties": {
							"cwd": {
								"type": "string",
								"description": "Workspace root."
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"name": "Flutter mobile app",
						"type": "flutter",
						"request": "launch"
					}
				],
				"configurationSnippets": [
					{
						"label": "Flutter mobile app",
						"description": "Launch and debug Flutter mobile applications",
						"body": {
							"name": "Flutter mobile app",
							"type": "flutter",
							"request": "launch"
						}
					}
				]
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "tsc -p ./",
		"compile": "tsc -watch -p ./",
		"test": "node ./node_modules/vscode/bin/test",
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"dependencies": {
		"vscode-debugadapter": "^1.20.0",
		"vscode-debugprotocol": "^1.20.0",
		"ws": "^1.1.1"
	},
	"devDependencies": {
		"typescript": "^2.2.1",
		"vscode": "^1.1.0",
		"mocha": "^3.2.0",
		"@types/node": "^6.0.63",
		"@types/mocha": "^2.2.39",
		"@types/ws": "^0.0.38"
	}
}
