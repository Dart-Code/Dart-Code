name: Run Tests

on:
  push:
  pull_request:
  schedule:
     - cron: '0 6 * * 1-5'
  workflow_dispatch:

jobs:

  build:

    name: "${{ matrix.bot }} (${{ matrix.build-version }} ${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [18]
        build-version: ['3.7.0', '3.10.0', '3.13.0', '3.16.0', '3.19.0']
        bot: [flutter_debug_chrome, flutter_debug_chrome_sdk_dap]

    steps:

      - uses: actions/checkout@v4

      # upload-artifact fails if the path does not exist (it only supports
      # silent failure for no-files-found, but the path must exist), so
      # ensure these folders exist so that if the build/lint fails we don't
      # get additional failures reported on the artifact uploads that make
      # it less clear what the failure is.
      - run: |
          mkdir -p .crash_dumps
          mkdir -p .dart_code_test_logs
          mkdir -p .test_results
          mkdir -p coverage
        shell: pwsh

      - name: Setup XVFB
        if: matrix.os == 'ubuntu-latest'
        run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Setup Node v${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Flutter ${{ matrix.build-version }}
        id: flutter
        uses: DanTup/gh-actions/setup-flutter@517f541376ae89ae373355135ad81a6a8b55a52c
        with:
          channel: ${{ matrix.build-version }}

      - run: sudo snap install flutter --classic
        if: matrix.bot == 'flutter_snap'

      - run: dart --disable-analytics

      - run: flutter config --no-analytics
        if: matrix.bot != 'flutter_snap' && !startsWith(matrix.bot, 'dart')

      - run: flutter update-packages
        if: matrix.bot == 'flutter_repo'

      - name: Print Dart version
        if: matrix.bot != 'flutter_snap'
        run: dart --version

      - name: Print Flutter version
        if: matrix.bot != 'flutter_snap' && !startsWith(matrix.bot, 'dart')
        run: flutter --version

      - name: Enable Flutter web support
        if: startsWith(matrix.bot, 'flutter') && matrix.bot != 'flutter_snap'
        run: flutter config --enable-web

      - name: Flutter precache
        if: startsWith(matrix.bot, 'flutter') && matrix.bot != 'flutter_snap'
        run: flutter precache

      - run: |
          dart pub global activate --no-executables crypto
          dart pub global activate --no-executables webdev
          dart pub global activate --no-executables args 2.3.0
          dart pub global activate --no-executables meta 1.7.0
          dart pub global activate --no-executables lints 1.0.0
          dart pub global activate --no-executables json_annotation 4.0.1
        if: matrix.bot != 'flutter_snap'
        shell: pwsh

      - name: npm install
        run: npm install

      - name: npm lint
        run: npm run lint

      - name: npm build
        run: npm run build

      - name: dart pub get (hello_world)
        if: startsWith(matrix.bot, 'dart')
        run: dart pub get
        working-directory: src/test/test_projects/hello_world

      - name: dart pub get (hello_world/example)
        if: startsWith(matrix.bot, 'dart')
        run: dart pub get
        working-directory: src/test/test_projects/hello_world/example

      - name: dart pub get (dart_nested)
        if: matrix.bot == 'misc'
        run: dart pub get
        working-directory: src/test/test_projects/dart_nested

      - name: dart pub get (dart_nested/nested1)
        if: matrix.bot == 'misc'
        run: dart pub get
        working-directory: src/test/test_projects/dart_nested/nested1

      - name: dart pub get (web/hello_world)
        if: startsWith(matrix.bot, 'dart_web')
        run: dart pub get
        working-directory: src/test/test_projects/web/hello_world

      - name: dart pub get (web/broken)
        if: startsWith(matrix.bot, 'dart_web')
        run: dart pub get
        working-directory: src/test/test_projects/web/broken

      - name: dart pub get (dart_nested/nested1/nested2)
        if: matrix.bot == 'misc'
        run: dart pub get
        working-directory: src/test/test_projects/dart_nested/nested1/nested2

      - name: flutter pub get (dart_nested_flutter/nested_flutter_example)
        if: matrix.bot == 'misc'
        run: flutter pub get
        working-directory: src/test/test_projects/dart_nested_flutter/nested_flutter_example

      - name: flutter pub get (dart_nested_flutter2/nested_flutter_example)
        if: matrix.bot == 'misc'
        run: flutter pub get
        working-directory: src/test/test_projects/dart_nested_flutter2/nested_flutter_example

      - name: flutter create (flutter_hello_world)
        if: startsWith(matrix.bot, 'flutter') && matrix.bot != 'flutter_snap'
        run: flutter create .
        working-directory: src/test/test_projects/flutter_hello_world

      - name: flutter create (flutter_hello_world_bazel)
        if: startsWith(matrix.bot, 'flutter') && matrix.bot != 'flutter_snap'
        run: flutter create .
        working-directory: src/test/test_projects/bazel_workspace/flutter_hello_world_bazel

      - name: flutter pub get (flutter_hello_world)
        if: startsWith(matrix.bot, 'flutter') && matrix.bot != 'flutter_snap'
        run: flutter packages get
        working-directory: src/test/test_projects/flutter_hello_world

      - name: flutter pub get (flutter_hello_world_bazel)
        if: startsWith(matrix.bot, 'flutter') && matrix.bot != 'flutter_snap'
        run: flutter packages get
        working-directory: src/test/test_projects/bazel_workspace/flutter_hello_world_bazel

      - name: npm test
        run: npm test
        env:
          CI: true
          ELECTRON_NO_ATTACH_CONSOLE: 1
          DISPLAY: ":99.0"
          BOT: ${{ matrix.bot }}
          BUILD_VERSION: ${{ matrix.build-version }}
          LOGS_NAME: ${{ matrix.build-version }}
          FLUTTER_REPO_PATH: ${{ steps.flutter.outputs.flutter-sdk }}
