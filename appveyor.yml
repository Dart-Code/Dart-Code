environment:
  AWS_ACCESS_KEY_ID:
    secure: 2IDNrdK4BiM3+9TnW/K3nazF9S2pG7tyVQx249JDiY4=
  AWS_SECRET_ACCESS_KEY:
    secure: s6QyIIIqf3VPkCrGG9E0kqa6AXxyrygL+KDwdMSAj0yNE7RjN0nWCNob48syHA+a
  # https://github.com/flutter/flutter/issues/17768
  FLUTTER_TEST: true
  matrix:
    - ONLY_RUN_CODE_VERSION: STABLE
      ONLY_RUN_DART_VERSION: STABLE
    - ONLY_RUN_CODE_VERSION: DEV
      ONLY_RUN_DART_VERSION: DEV

matrix:
  fast_finish: true
  allow_failures:
    - ONLY_RUN_CODE_VERSION: DEV
      ONLY_RUN_DART_VERSION: STABLE
    - ONLY_RUN_CODE_VERSION: STABLE
      ONLY_RUN_DART_VERSION: DEV
    - ONLY_RUN_CODE_VERSION: DEV
      ONLY_RUN_DART_VERSION: DEV

# Don't build tags.
skip_tags: true

# Don't build Stable/Dev or Dev/Stable unless master (and not a PR->master merge build)
# as the changes of a failure showing up in those and not in either Stable/Stable or
# Dev/Dev are pretty slim so this will half the time for branch builds.
for:
  -
    branches:
      only:
        - master
    # TODO: Skip master builds that are PR-merges
    # https://help.appveyor.com/discussions/questions/35664-how-to-conditionally-skip-some-matrix-builds-for-the-prs-merge-into-branch-builds
    environment:
      matrix:
        - ONLY_RUN_CODE_VERSION: DEV
          ONLY_RUN_DART_VERSION: STABLE
        - ONLY_RUN_CODE_VERSION: STABLE
          ONLY_RUN_DART_VERSION: DEV

cache:
  - "%APPDATA%\\Pub\\Cache"
  - "with spaces\\flutter"
  - node_modules

install:
  - echo Misc setup
  - ps: $env:PATH="C:\Ruby25-x64\bin;$env:PATH"
  - ps: Install-Product node ''
  - ps: $env:ELECTRON_NO_ATTACH_CONSOLE = 1
  - ps: gem install dpl
  - echo Setting variables...
  - ps: >-
      if ($env:ONLY_RUN_DART_VERSION -eq "STABLE") {
        $env:DART_CHANNEL="stable/release"
        $env:FLUTTER_BRANCH="stable"
      } elseif ($env:ONLY_RUN_DART_VERSION -eq "DEV") {
        $env:DART_CHANNEL="dev/release"
        $env:FLUTTER_BRANCH="dev"
      } else {
        $env:DART_CHANNEL="be/raw"
        $env:FLUTTER_BRANCH="master"
      }
  - IF NOT EXIST "with spaces" mkdir "with spaces"
  - ps: cd "with spaces"
  - echo Downloading Dart and Flutter...
  - ps: Invoke-WebRequest "https://storage.googleapis.com/dart-archive/channels/${env:DART_CHANNEL}/latest/sdk/dartsdk-windows-x64-release.zip" -OutFile "dart.zip"
  - ps: 7z.exe x dart.zip | out-null
  - IF NOT EXIST "flutter" mkdir "flutter"
  - cd flutter
  - IF NOT EXIST ".git" (
      git init
      git remote add origin https://github.com/flutter/flutter.git
    ) else (
      git remote set-url origin https://github.com/flutter/flutter.git
    )
  - git fetch
  - git reset --hard origin/%FLUTTER_BRANCH%
  - git checkout origin/%FLUTTER_BRANCH%
  - cd ..
  - echo Configuring Dart and Flutter...
  - flutter\bin\flutter config --no-analytics
  - flutter\bin\flutter update-packages
  - ps: $env:FLUTTER_PATH = "$pwd\flutter"
  - ps: $env:DART_PATH = "$pwd\dart-sdk"
  - dart-sdk\bin\dart --version
  - flutter\bin\flutter --version
  - node --version
  - npm --version
  - flutter\bin\flutter doctor
  - dart-sdk\bin\pub global activate --no-executables stagehand
  - dart-sdk\bin\pub global activate --no-executables args 1.5.0
  - dart-sdk\bin\pub global activate --no-executables meta 1.1.6
  - dart-sdk\bin\pub global activate --no-executables pedantic 1.4.0
  - dart-sdk\bin\pub global activate --no-executables json_annotation 1.2.0
  - dart-sdk\bin\pub global activate --no-executables devtools
  - cd ..

build_script:
  - npm install --depth 0


test_script:
  - npm run vscode:prepublish
  - npm run lint
  - npm test
  - ps: Get-WmiObject Win32_Process -Filter "name = 'dart.exe'" | Select-Object CommandLine
  - ps: if (get-process dart -ErrorAction SilentlyContinue) { throw "Dart processes were still running" }

on_failure:
  - ps: $env:APPVEYOR_RESULT = 1

on_finish:
  - IF NOT DEFINED APPVEYOR_PULL_REQUEST_NUMBER dpl --provider=s3 --bucket="test-results.dartcode.org" --skip_cleanup="true" --local-dir=".dart_code_test_logs" --upload-dir="logs/%APPVEYOR_REPO_BRANCH%/%APPVEYOR_REPO_COMMIT%/win" --acl=public_read --default_text_charset=utf-8
  - IF NOT DEFINED APPVEYOR_PULL_REQUEST_NUMBER dpl --provider=s3 --bucket="test-results.dartcode.org" --skip_cleanup="true" --local-dir=".test_results" --upload-dir="%APPVEYOR_REPO_BRANCH%/%APPVEYOR_REPO_COMMIT%/win" --acl=public_read --default_text_charset=utf-8
